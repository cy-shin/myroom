#grid-container > div{
    background-color: orange;
    border: 1px solid black;
}

/* 1. 컨테이너에 그리드 속성을 부여
      컨테이너의 자식 요소들이 그리드 아이템으로 바뀜 */

#grid-container{
    display: grid;
}


/* 2. 그리드 트랙의 크기를 변경
    - 그리드 트랙 : 그리드 컨테이너를 이루는 행, 열을 가리킴
    - 현재 구조는 열 트랙 * 3 / 행 트랙 * 2
    - 그리드 트랙(열)의 길이가 200px로 고정됨    
*/
/* #grid-container{
    grid-template-rows: 200px;
} */

/* 3. fr(fraction) 단위
    - fr : 그리드 컨테이너에 남아 있는 사용 가능한 공간의 일정 비율
    - 열 트랙의 크기를 2:1:1 비율로 나눔
    - 열 트랙의 첫 번째 트랙의 크기는 500px로 고정하고, 나머지 공간을 1:2 비율로 나눔
*/
/* #grid-container{
    display: grid;
    grid-template-columns: 2fr 1fr 1fr;
} */

/* fr과 고정 픽셀의 복합 적용 */
/* #grid-container{
    display: grid;
    grid-template-columns: 500px 1fr 2fr;
} */

/* 4. repaet 사용 
    - 반복 입력하지 않아도 자동으로 반복입력해줌 
    - column 트랙의 길이를 1fr로 지정함 * 3번 반복    
*/
/* #grid-container{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
} */

/* 고정 길이와 repeat를 함께 사용 
    - 첫 번째 column 트랙의 길이는 50px, 나머지는 1fr */
/* #grid-container{
    display: grid;
    grid-template-columns: 50px repeat(2, 1fr);
} */

/* repeat을 이용해서 반복 구조를 만들 수 있음 
    - column 트랙의 길이를 1:2비율로 만듦 * 2번 반복함 -> column이 2개 만들어짐 */
/* #grid-container{
    display: grid;
    grid-template-columns: repeat(2, 1fr 2fr);
} */

/* 5. 잠재적 그리드? 
    - 명시적 그리드 : grid-template-columns 또는 grid-template-rows로 직접 정의한 그리드 
    - 직접 정의하지 않은 부분으로, 그리드에서 그리드 아이템을 배치하고자 임의로 정의한 그리드의 내용
    - 위에서 columns track의 크기는 직접 지정을 했지만, row track의 크기는 지정하지 않았는데 이게 잠재적 그리드
    - 잠재적 그리드의 트랙 크기 또한 조절할 수 있음
*/

/* 6. grid-auto-rows, grid-auto-columns
    - 잠재적 그리드의 트랙 크기를 조절함 */
/* #grid-container{
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-auto-rows: 200px;
} */

/* 잠재적 그리드 트랙 크기 조절2 */
/* #grid-container{
    display: grid;
    grid-auto-columns: 400px;
    grid-template-rows: repeat(2, 100px 200px);
} */

/* 7. minmax
    - 최소크기 및 최대크기를 지정 
    - 첫 번째 열은 최소 50px에서 최대 무제한
    - 두 번째 열은 최소 300px에서 최대 400px까지만*/
/* #grid-container{
    display: grid;
    grid-template-columns: repeat(2, minmax(50px, auto) minmax(300px, 400px)); 
} */

/* 8. 라인 번호를 이용해 영역 지정 */
#grid-container{
    display: grid;
    grid-template-columns: repeat(3, 50px);
    grid-template-rows: repeat(3, 50px);
}
#grid-container > div:nth-child(1){
    grid-column: 1/3;
    grid-row: 1;
}
#grid-container > div:nth-child(2){
    grid-column: 3;
    grid-row: 1/3;
}
#grid-container > div:nth-child(3){
    grid-row: 3;
    grid-column: 2/4;
}
#grid-container > div:nth-child(4){
    grid-column: 1;
    grid-row: 2/4;
}